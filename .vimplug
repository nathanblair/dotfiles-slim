" Plugin loading and handling
if empty(glob('~/.vim/autoload/plug.vim'))
  silent !curl -fLo ~/.vim/autoload/plug.vim --create-dirs
    \ https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
  autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin('~/.vim/bundle')
  "Plug 'dracula/vim', {'as': 'vim-dracula-theme'}
  Plug 'drewtempelmeyer/palenight.vim'
  "Plug 'neoclide/coc.nvim', {'branch': 'release'}
  Plug 'scrooloose/nerdtree'
  Plug 'scrooloose/nerdcommenter'
  Plug 'cohama/lexima.vim'
  Plug 'thaerkh/vim-indentguides'
  Plug 'machakann/vim-sandwich'
  "Plug 'sheerun/vim-polyglot'
  "Plug 'junegunn/goyo.vim'
  "Plug 'ap/vim-buftabline'
  "Plug 'ctrlpvim/ctrlp.vim'
  "Plug 'vim-airline/vim-airline'
  "Plug 'tpope/vim-fugitive'
  "Plug 'mhinz/vim-signify'
call plug#end()

" Color scheme
set termguicolors
color palenight


" NERDTree
nnoremap <silent> <C-b> :NERDTreeToggle<CR>

" NERDCommenter
nnoremap <silent> <Leader>cc :call nerdcommenter#Comment(0, 'toggle')<CR>
vnoremap <silent> <Leader>cc :call nerdcommenter#Comment(0, 'toggle')<CR>

" -------------------------------------------------------------"
" vim-plug settings                                         PS
" -------------------------------------------------------------"
" NERDTree
let g:NERDTreeSortHiddenFirst=1
let g:NERDTreeChDirMode=2
let g:NERDTreeHijackNetrw=1
let g:NERDTreeMinimalUI=1
let g:NERDTreeIgnore=['^__pycache__']
let g:NERDTreeCascadeSingleChildDir=0
let g:NERDTreeCascadeOpenSingleChildDir=0
let g:NERDTreeStatusline='%( %{pathshorten(fnamemodify(getcwd(), ":~"))}%)'

" NERDCommenter
let g:NERDCreateDefaultMappings=0


" vim:ft=vim
